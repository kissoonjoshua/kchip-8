#pragma once
#include <cstdint>
#include <cstddef>

constexpr uint16_t PC_START = 0x200;
constexpr uint16_t SP_START = 0xEA0;
constexpr uint16_t FONT_START = 0x50;
constexpr size_t FONT_SIZE = 0x50;
constexpr uint16_t DISPLAY_START = 0xF00;
constexpr uint8_t DISPLAY_WIDTH = 0x40;
constexpr uint8_t DISPLAY_HEIGHT = 0x20;
constexpr uint16_t MAX_MEM = 0x1000;
constexpr uint8_t FONT[] = {
  0xF0, 0x90, 0x90, 0x90, 0xF0, 
  0x20, 0x60, 0x20, 0x20, 0x70, 
  0xF0, 0x10, 0xF0, 0x80, 0xF0, 
  0xF0, 0x10, 0xF0, 0x10, 0xF0, 
  0x90, 0x90, 0xF0, 0x10, 0x10, 
  0xF0, 0x80, 0xF0, 0x10, 0xF0, 
  0xF0, 0x80, 0xF0, 0x90, 0xF0, 
  0xF0, 0x10, 0x20, 0x40, 0x40, 
  0xF0, 0x90, 0xF0, 0x90, 0xF0, 
  0xF0, 0x90, 0xF0, 0x10, 0xF0, 
  0xF0, 0x90, 0xF0, 0x90, 0x90, 
  0xE0, 0x90, 0xE0, 0x90, 0xE0, 
  0xF0, 0x80, 0x80, 0x80, 0xF0, 
  0xE0, 0x90, 0x90, 0x90, 0xE0, 
  0xF0, 0x80, 0xF0, 0x80, 0xF0, 
  0xF0, 0x80, 0xF0, 0x80, 0x80  
};

struct State {
  uint16_t pc;
  uint16_t sp;
  uint16_t i;
  uint8_t delay;
  uint8_t sound;
  uint8_t keys;
  uint8_t prev_keys;
  bool key_wait;
  uint8_t v[0x10];
  uint8_t *memory;
  uint8_t *display;
};

void emulate_op(State&);
void not_implemented(State&, int8_t, int8_t);
void redraw(uint8_t*);